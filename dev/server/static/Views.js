// Generated by CoffeeScript 1.3.3
(function() {
  var GameView, MainView, MatchView, UserView, UsersView, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  this.app = (_ref = window.app) != null ? _ref : {};

  GameView = (function(_super) {

    __extends(GameView, _super);

    function GameView() {
      return GameView.__super__.constructor.apply(this, arguments);
    }

    GameView.prototype.tagName = 'li';

    return GameView;

  })(Backbone.View);

  UserView = (function(_super) {

    __extends(UserView, _super);

    function UserView() {
      return UserView.__super__.constructor.apply(this, arguments);
    }

    UserView.prototype.tagName = 'span';

    UserView.prototype.render = function() {
      var content;
      content = this.model.get('alias');
      $(this.el).html(content);
      return this.el;
    };

    return UserView;

  })(Backbone.View);

  UsersView = (function(_super) {

    __extends(UsersView, _super);

    function UsersView() {
      this.addAll = __bind(this.addAll, this);

      this.addOne = __bind(this.addOne, this);
      return UsersView.__super__.constructor.apply(this, arguments);
    }

    UsersView.prototype.initialize = function() {
      this.input = this.$('#new-user');
      this.collection.bind('add', this.addOne);
      this.collection.bind('refresh', this.addAll);
      this.collection.bind('reset', this.addAll);
      return this.collection.fetch();
    };

    UsersView.prototype.addOne = function(user) {
      var view;
      console.log(user);
      view = new UserView({
        model: user
      });
      this.$('#user-list').append(view.render());
      return this.$('#user-list').append("<span> - </span>");
    };

    UsersView.prototype.addAll = function() {
      return this.collection.each(this.addOne);
    };

    return UsersView;

  })(Backbone.View);

  MatchView = (function(_super) {

    __extends(MatchView, _super);

    function MatchView() {
      return MatchView.__super__.constructor.apply(this, arguments);
    }

    return MatchView;

  })(Backbone.View);

  MainView = (function(_super) {

    __extends(MainView, _super);

    function MainView() {
      return MainView.__super__.constructor.apply(this, arguments);
    }

    MainView.prototype.el = $('body');

    MainView.prototype.initialize = function() {
      _.bindAll(this);
      this.collection = new Games;
      this.collection.bind('');
      return this.render();
    };

    MainView.prototype.render = function() {
      return $(this.el).append('<ul><li>Welcome!  Fetching your information.... </li></ul>');
    };

    return MainView;

  })(Backbone.View);

  this.app.UsersView = UsersView;

}).call(this);
